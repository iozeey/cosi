<div class="container text-center">
	<h2>Customer Address Details</h2>
	<p id="notice"><%= notice %></p>
	<p>
		<strong>Order:</strong>
		<%= @customer.order %>
	</p>
	<p>
		<strong>Address:</strong>
		<%= @customer.address %>
	</p>
	<p>
		<strong>Latitude:</strong>
		<%= @customer.latitude %>
	</p>
	<p>
		<strong>Longitude:</strong>
		<%= @customer.longitude %>
	</p>
	<%= link_to 'Edit', edit_customer_path(@customer) %> |
	<%= link_to 'Back', customers_path %>
</div>
<br><br>
<input id="location_area" value="" hidden="true" readonly/>
<div id="map_out" style='width: 100%; height: 500px;'></div>
<div class="text-center">
	<br>
	<h2>This Delivery Address is within Delivery Zone of following restaurants. </h2>
	<br>
</div>
	<%# if @Actual_Distance.present?%>
	<%#for dist in @Actual_Distance %>
	<!-- <h3> Estimated Delivery Cost from Nearest Restaurant is $5, which is <%#= dist.round(2) %> kilometers away from Delivery Address.</h3> -->
	<%#end%>
	<%#end%>
<script type="text/javascript">
	var nearestZones = [];
	var found = [];
	var bool_value = false;
	latLngA = new google.maps.LatLng(<%= @customer.latitude %>, <%= @customer.longitude %>);
	<% if @Restaurant.present? %>
		<%for rest in @Restaurant %>
			latLngB = new google.maps.LatLng (<%=rest.latitude%>, <%=rest.longitude%>);
			var currentDistance = google.maps.geometry.spherical.computeDistanceBetween (latLngA, latLngB);
			if((currentDistance/1000) < 10){
				nearestZones.push('"<%= raw rest.to_json %>"');
				var x = <%= raw rest.area %>;
				var arr = $.map(x, function(el) { return el });
				var shapeType = arr[0].type;
				if(shapeType=="CIRCLE"){
					var circle_radius = arr[0].radius;
					var point = {lat: arr[0].geometry[0], lng: arr[0].geometry[1]};
					latLngAA = new google.maps.LatLng (point);
					if(google.maps.geometry.spherical.computeDistanceBetween (latLngA, latLngAA) < circle_radius){
						bool_value = true;
					}
					}else if (shapeType=="POLYGON"){
						var latlngarray = []; arr[0].geometry.forEach(function(item){
						item.forEach(function(latlong){
							latlngarray.push({lat: latlong[0], lng: latlong[1]});
							var triangleShape = new google.maps.Polygon({paths: [latlngarray]});
							bool_value = (google.maps.geometry.poly.containsLocation(latLngA, triangleShape));
						});
					});
				}else if(shapeType=="RECTANGLE"){
					var rectangleCorners = [];
					arr[0].geometry.forEach(function(item){
						rectangleCorners.push(item[0]);
						rectangleCorners.push(item[1]);
					});
					var rectangleShape = new google.maps.Rectangle({
						bounds: new google.maps.LatLngBounds(
							new google.maps.LatLng(rectangleCorners[0], rectangleCorners[1]),
							new google.maps.LatLng(rectangleCorners[2], rectangleCorners[3])
							),
					});
				var bool_value = rectangleShape.getBounds().contains(latLngA);
					}else if(shapeType=="POLYLINE"){
						bool_value = false;
					}
					if(bool_value==true){
						found.push(x);
						var heading = document.createElement("H3");
    					var t = document.createTextNode("<%= raw rest.title %> Restaurant is "+ (currentDistance/1000).toFixed(2) +" Kilometers away and Delivery Cost is <%= raw rest.inside_zone %> Dollars.");
    						heading.appendChild(t);
    						document.body.appendChild(heading);
					}
					 // else{
					// 	var smallheading = document.createElement("H5");
					// 	var t = document.createTextNode("<%= raw rest.title %> Restaurant is "+ (currentDistance/1000).toFixed(2) +" Kilometers away and Delivery Cost is <%= raw rest.outsite_zone %> Dollars");
    	// 					smallheading.appendChild(t);
    	// 					document.body.appendChild(smallheading);
					// }
				}
		<%end%>
	<%end%>
	function loadfoundLocation(){
	var goo = google.maps,
	map_out = new goo.Map(document.getElementById('map_out'),
	{ zoom: 12, center: new goo.LatLng(<%= @customer.latitude %>, <%= @customer.longitude%>)}),
	byId = function(s){return document.getElementById(s)};
	new goo.Marker({
	position: {lat: <%= @customer.latitude %>, lng: <%= @customer.longitude%> },
	map: map_out,
	title: "Delivery Order Address!",
	});
	found.forEach(function(locationss){
		locationss.forEach(function(loca){
	document.getElementById('location_area').value = JSON.stringify([loca]);
	IO.OUT(JSON.parse(byId('location_area').value),map_out);
	});
	});
	}
	$(document).ready( loadfoundLocation );
	$(document).on("page:load", loadfoundLocation );
</script>